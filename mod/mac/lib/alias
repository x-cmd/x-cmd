
___x_cmd_mac_alias(){
    [ "$#" -gt 0 ] || set -- status

    ___x_cmd os is darwin || {
        mac:error "This module is only supported in macOS environments."
        return 1
    }

    local op="$1"; shift
    case "$op" in
        enable)                 ___x_cmd_mac_alias_enable              "$@" ;;
        disable)                ___x_cmd_mac_alias_disable             "$@" ;;
        status)                 ___x_cmd_mac_alias_status              "$@" ;;
        --help|-h)              ___x_cmd help -m mac alias              ;;
        *)                      N=mac M="Unknown subcmd -> $op" log:ret:64  ;;
    esac
}

___x_cmd_mac_alias_enable(){
    local word="$1"

    [ -n "$word" ] || {
        mac:info "Using m as the default alias."
        word=m
    }

    shortcut:get:data:init
    ___x_cmd shortcut get --format simple --by category mac | while shortcut:get:parse:data; do
        if [ "$curword" = "$word" ];then
            [ "$curstatus" != enable ] || {
                mac:info "Alias $word has already been enabled."
                return 0
            }
        else
            ___X_CMD_SHORTCUT_NOAUTO_COMPILE_ALL=1 ___x_cmd shortcut rename --platform darwin "$curword" "$word" || return $?
        fi
    done

    ___x_cmd shortcut enable  --platform darwin --by category mac || return $?
    mac:info "Alias enabled successfully."
    mac:info "To apply the configuration, please reopen a new shell environment."
}

___x_cmd_mac_alias_disable(){

    # TODO: Remove the configuration files of the previous versions (this line of code will be removed in a future version)
    ___x_cmd_cmds rm -f "$___X_CMD_ROOT_BOOT/alias/mac.enable"

    shortcut:get:data:init
    ___x_cmd shortcut get --format simple --by category mac | while shortcut:get:parse:data; do
        if [ "$curstatus" = disable ];then
            mac:info "Alias has already been disabled."
            return 0
        fi
    done

    ___x_cmd shortcut disable --platform darwin --by category mac || return $?
    mac:info "Alias disabled successfully."
    mac:info "To apply the configuration, please reopen a new shell environment."
}

___x_cmd_mac_alias_status(){
    ___x_cmd shortcut get --by category mac || {
        printf "status: disable\n"
    }
}

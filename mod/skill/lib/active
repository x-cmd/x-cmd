# shellcheck shell=dash

___x_cmd_skill_active(){
    local op="$1"
    case "$1" in
        -h|--help)  ___x_cmd help -m skill active "$@"; return 0 ;;
        ls|cat|which|which_|rm|add)
                    shift; ___x_cmd_skill_active_"$op" "$@" ;;
        *)          N=skill M="Unknown subcmd -> $op" log:ret:64 ;;
    esac
}

___x_cmd_skill_active_ls(){
    local dir="${1:-"$___X_CMD_SKILL_DATA_DIR/active"}"
    ___x_cmd_skill_preview "$dir"
}

___x_cmd_skill_active_cat(){
    local skill_name="$1"
    [ -n "$skill_name" ] || N=skill M="Please provide a skill name" log:ret:64
    local x_=; ___x_cmd_skill_active_which_ "$skill_name" "SKILL.md" || return $?
    skill:info "cat $x_"
    ___x_cmd_cmds cat "$x_"
}

___x_cmd_skill_active_which_(){
    local skill_name="$1"
    local filename="$2"
    [ -n "$skill_name" ] || N=skill M="Please provide a skill name" log:ret:64
    local skill_dir="$___X_CMD_SKILL_DATA_DIR/active"
    x_="$skill_dir/$skill_name/$filename"
    [ -e "$x_" ] || N=skill M="Not found active file -> $x_" log:ret:1
}

___x_cmd_skill_active_which(){
    local x_=; ___x_cmd_skill_active_which_ "$@" || return $?
    printf "%s\n" "$x_"
}

___x_cmd_skill_active_rm(){
    local name="$1"; [ -n "$name" ] || N=skill M="Please provide skill name" log:ret:64
    local dir="${2:-"$___X_CMD_SKILL_DATA_DIR/active"}"
    local target="$dir/$name"
    [ ! -d "$target" ] || ___x_cmd rmrf "$target" || return $?
    skill:info "Successfully removed skill[$name]"
}

___x_cmd_skill_active_add___app(){
    ___x_cmd_runmode_allow_manual || return 0
    local id=; ___x_cmd ui select id "Select operation" \
        "Active all skills" \
        "Select a skill to active" \
        "Exit" || return $?
    case "$id" in
        1) ___x_cmd_skill_active_add all ;;
        2)
            local ___X_CMD_CSV_APP_DATA_CURROW=""
            ___x_cmd_skill_ll | ___x_cmd tsv tocsv | {
                ___x_cmd csv app --return line || return $?
                local name="${___X_CMD_CSV_APP_DATA_CURROW%%,*}"
                [ -n "$name" ] || return 1
                ___x_cmd_skill_active_add "$name"
            }
            ;;
        *)  return 0 ;;
    esac
}

___x_cmd_skill_active_add(){
    local name="$1"; [ -n "$name" ] || N=claude M="Please provide skill name" log:ret:64
    local dir="${2:-"$___X_CMD_SKILL_DATA_DIR/active"}"
    ___x_cmd_skill___data_check || return $?

    if [ "$name" = all ]; then
        ___x_cmd fsiter --folder "$___X_CMD_SKILL_DATA_DIR/full" | {
            while read -r name; do
                case "$name" in
                    all) continue ;;
                    *)   ___x_cmd_skill_active_add "$name" "$dir" ;;
                esac
            done
        }
        return
    fi

    local target="$dir/$name"
    local datadir="$___X_CMD_SKILL_DATA_DIR/full/$name"

    [ -d "$datadir" ] || N=skill M="Not found skill[$name]" log:ret:64
    ___x_cmd rmrf "$target"
    ___x_cmd ensurefp "$target"
    ___x_cmd_cmds cp -rf "$datadir" "$target"
    skill:info "Successfully activated skill[$name]"
}

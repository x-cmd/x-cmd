# shellcheck shell=dash

___x_cmd_claude_skill(){
    [ "$#" -gt 0 ] ||   set -- ls

    local op="$1";      shift
    case "$op" in
        ll|ls|add|rm)   ___x_cmd_claude_skill_"$op"   "$@" ;;
        -h|--help)      ___x_cmd help -m claude skill "$@" ;       return 0 ;;
        *)              N=claude M="skill not such [subcmd=$op]" log:ret:64 ;;
    esac
}

___x_cmd_claude_skill_ll(){
    ___x_cmd skill ll
}

___x_cmd_claude_skill_ls(){
    local project_dir=".claude/skills"
    local user_dir="$HOME/.claude/skills"

    if [ -d "$project_dir" ]; then
        claude:info "Listing project-level skills from: $project_dir"
        ___x_cmd skill active ls "$project_dir"
    fi

    if [ -d "$user_dir" ]; then
        claude:info "Listing user-level skills from: $user_dir"
        ___x_cmd skill active ls "$user_dir"
    fi
}

___x_cmd_claude_skill_rm(){
    local dir="$HOME/.claude/skills"
    while [ $# -gt 0 ]; do
        case "$1" in
            -h|--help)              ___x_cmd help -m claude skill rm ; return 0 ;;
            --project)              dir=".claude/skills";       shift 1 ;;
            *)                      break ;;
        esac
    done
    ___x_cmd skill active rm "$1" "$dir"
}

___x_cmd_claude_skill_add(){
    local dir="$HOME/.claude/skills"
    while [ $# -gt 0 ]; do
        case "$1" in
            -h|--help)              ___x_cmd help -m claude skill add ; return 0 ;;
            --project)              dir=".claude/skills";       shift 1 ;;
            *)                      break ;;
        esac
    done

    ___x_cmd skill active add "$1" "$dir"
}

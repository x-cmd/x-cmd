# shellcheck shell=dash disable=SC2034

xrc cfgy
___x_cmd_mistral_cfg(){
    [ "$#" -gt 0 ] || {
        ___x_cmd_mistral_init
        return
    }

    local op="$1"; shift
    case "$op" in
        -h|--help)      ___x_cmd help -m mistral --cfg ;;
        *)              ___x_cmd_mistral_cfg___invoke "$op" "$@" ;;
    esac
}

___x_cmd_mistral_cur(){
    local X_help_cmd=; X_help_cmd='___x_cmd help -m mistral --cur' help:arg:parse
    ___x_cmd_mistral_cfg --current "$@"
}

___x_cmd_mistral_init(){
    local cur_apikey=; local cur_model=; local cur_maxtoken=; local cur_proxy=; local cur_endpoint=;

    if [ -f "$(___x_cmd_mistral_cur --get config)" ]; then
        ___x_cmd_mistral_cur cur_apikey:=apikey cur_model:=model cur_maxtoken:=maxtoken cur_proxy:=proxy cur_endpoint:=endpoint 2>/dev/null
    fi

    mistral:info "To get mistral's API key -> https://console.mistral.ai/api-keys/"

    ___x_cmd_mistral_cfg___invoke --init ${cur_apikey:+"--ctrl_exit_strategy"}                                   \
        apikey      "Set up the API key of mistral ai"                                                           \
                    "$cur_apikey"   '=~*' "^[A-Za-z0-9-]+$" --                                                   \
        model       "Set the model of mistral ai"                                                                \
                    "${cur_model:-"$___X_CMD_MISTRAL_DEFAULT_FIRST_MODEL"}"   '=' mistral-large-latest                            \
                                                                 mistral-small mistral-medium  mistral-medium-latest --                \
        maxtoken    "Set the maxtoken of mistral ai"                                                             \
                    "${cur_maxtoken:-1000}"   '=~' "^[0-9]+$" --                                                 \
        endpoint    "Set endpoint (optional)"           "$cur_endpoint"  --                                      \
        proxy       "Set up the network proxy for API requests (optional)"                                       \
                    "$cur_proxy" '=~'    "^([a-z0-9]+://)?[0-9.:]+$" || return $?

    ! ___x_cmd_mistral_has_apikey 2>/dev/null >&2 || ___x_cmd shortcut enable --by category mistral
}

# Config setting the key.
# set the default prompt

___X_CMD_MISTRAL_CFG_VARLIST="apikey,model,maxtoken,proxy,seed,temperature,endpoint"
___x_cmd_mistral_cfg___invoke(){
    ___x_cmd_cfgy_obj                                                \
        --prefix            ___X_CMD_MISTRAL_CFG_DATA                \
        --default-config    "${___X_CMD_ROOT_CFG}/mistral/X.cfg.yml" \
        --current-config    "${___X_CMD_MISTRAL_LOCAL_CONFIG}"       \
        --current-profile   "${___X_CMD_MISTRAL_LOCAL_PROFILE}"      \
        --varlist           "$___X_CMD_MISTRAL_CFG_VARLIST"          \
        "$@"
}

___x_cmd_mistral_has_apikey(){
    local apikey=
    ___x_cmd_mistral_cur apikey:= 2>/dev/null
    [ -n "$apikey" ] || {
        mistral:error "Please setting up your apikey first ==> '___x_cmd mistral --cfg apikey=<your apikey>'"
        mistral:warn "You can get the apikey from ==>  https://docs.mistral.ai/api/"
        return 1
    }

}


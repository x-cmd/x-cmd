# shellcheck shell=dash disable=2016

___x_cmd_gemini_cli_skill(){
    [ "$#" -gt 0 ] ||   set -- ls

    local op="$1";      shift
    case "$op" in
        ll|ls|add|rm|setup)
                        ___x_cmd_gemini_cli_skill_"$op"   "$@" ;;
        -h|--help)      ___x_cmd help -m gemini cli skill "$@" ;       return 0 ;;
        *)              N=gemini M="skill not such [subcmd=$op]" log:ret:64 ;;
    esac
}

___x_cmd_gemini_cli_skill_ll(){
    local X_help_cmd; X_help_cmd='___x_cmd help -m gemini cli skill ll' help:arg:parse
    ___x_cmd skill ll
}

___x_cmd_gemini_cli_skill_ls(){
    local X_help_cmd; X_help_cmd='___x_cmd help -m gemini cli skill ls' help:arg:parse
    ___x_cmd skill active ls
}

___x_cmd_gemini_cli_skill_rm(){
    local X_help_cmd; X_help_cmd='___x_cmd help -m gemini cli skill rm' help:arg:parse
    ___x_cmd skill active rm "$@"
}

___x_cmd_gemini_cli_skill_add(){
    local X_help_cmd; X_help_cmd='___x_cmd help -m gemini cli skill add' help:arg:parse
    ___x_cmd skill active add "$@"
}


___x_cmd_gemini_cli_skill_setup(){
    local X_help_cmd; X_help_cmd='___x_cmd help -m gemini cli skill setup' help:arg:parse

    local x_=""; ___x_cmd_gemini_cli_skill_setup___get_agentfile_ || return $?
    local fp="$x_"
    ___x_cmd skill prompt setup "$fp"  || return $?
}

___x_cmd_gemini_cli_skill_setup___get_agentfile_(){
    local dir="$HOME/.gemini"
    local fname="GEMINI.md"
    if [ -f "$dir/settings.json" ]; then
        read -r fname <<A
$( < "$dir/settings.json" ___x_cmd jo env '.context.fileName.*' fname=. -- 'printf "%s\n" "$fname"' )
A
        [ -n "$fname" ] || fname="GEMINI.md"
    fi
    x_="$dir/$fname"
}

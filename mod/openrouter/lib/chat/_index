# shellcheck shell=dash

___x_cmd_openrouter_chat(){
    local X_help_cmd='___x_cmd help -m openrouter chat'; help:arg-null:parse
    local op="$1";
    case "$op" in
        request|exec)
            shift; ___x_cmd_openrouter_chat_"$op" "$@" ;;
        --def-model_)
            shift; ___x_cmd_openrouter_chat_def_model_ "$@" ;;
        *)  N=openrouter M="Not support such [subcmd=$op]" log:ret:64
    esac
}

___x_cmd_openrouter_chat_def_model_(){
    x_="$___X_CMD_OPENROUTER_DEFAULT_FIRST_MODEL"
}

___x_cmd_openrouter_chat_request(){
    local X_help_cmd='___x_cmd help -m openrouter chat request'; help:arg:parse
    ___x_cmd chat --exec --provider openrouter "$@"
}

___x_cmd_openrouter_chat_exec(){
    ___X_CMD_OPENAI_CHAT_ACTUAL_PROVIDER='openrouter'   \
    ___X_CMD_OPENAI_CHAT_ACTUAL_PROVIDER_NAME='OpenRouter'  \
    ___X_CMD_OPENAI_CHAT_ACTUAL_ENDPOINT="$___X_CMD_OPENROUTER_DEFAULT_ENDPOINT"    \
    ___x_cmd openai chat exec "$@"
}

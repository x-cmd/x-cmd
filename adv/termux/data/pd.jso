{
"#subcmd:Enhance"
:
[
"mirror"
,
"prep"
,
"run"
]
,
"#subcmd:Original"
:
[
"backup"
,
"install|i"
,
"list|ls"
,
"login|l"
,
"remove|rm"
,
"rename"
,
"reset"
,
"restore"
,
"clear-cache|clear"
,
"copy|cp"
]
,
"cnpatch"
:
{
"#desc"
:
{
"en"
:
"We will create a new code base for proot-distro, which is a modified version of the original termux-proot-distro.\nWe use aria2 instead of curl to ensure resumable downloads (with a concurrency limit of 2). For users in mainland China, some GitHub addresses will automatically be converted to Codeberg addresses.\nSo users do not need to manually set the mirror source through the mirror command.\nSince proot-distro checks the hashsum of the image to ensure security, the download will be redirected accordingly.\nThis command is still in the experimental stage.\n"
,
"cn"
:
"我们将创建一个新的 proot-distro 代码库，这是对原 termux-proot-distro 的修改版本.\n我们使用 aria2 替代 curl 确保可以断点续传(并发度控制为 2), 对于中国大陆用户, 部分 github 地址会自动转换为 Codeberg 地址.\n因此用户不需要手动通过 mirror 设置镜像源.\n由于下载会 proot-distro 会检测镜像的 hashsum, 以此来保障安全性.\n这个命令仍处于实验阶段.\n"
}
}
,
"install|i"
:
{
"#desc"
:
{
"en"
:
"Install a specified distribution.\n"
,
"cn"
:
"安装指定的发行版。与 proot-distro 的 install 子命令类似，但如果用户执行 x termux patchcn 子命令, 将会执行新的 termux-proot-distro 来进行加速.\n"
}
}
,
"mirror"
:
{
"#desc"
:
{
"cn"
:
"设置下载发行版文件的镜像源\n部分地区无法访问 github, 即 proot-distro 的默认镜像下载源, 我们提供了一种设置镜像源的方式.\n这个函数会修改位于 /data/data/com.termux/files/usr/etc/proot-distro 目录下的所有文件的 github 地址.\n"
,
"en"
:
"Set the mirror for downloading distribution files.\nSome regions cannot access GitHub, which is the default mirror download source for proot-distro. We provide a way to set the mirror.\nThis function will modify all files in the /data/data/com.termux/files/usr/etc/proot-distro directory to change the GitHub address.\n"
}
,
"use|set"
:
{
"#desc"
:
{
"cn"
:
"使用指定镜像源, 可选 cb ( codeberg ) 或 official ( github 镜像源 )."
,
"en"
:
"Use the specified mirror, options are cb (Codeberg) or official (GitHub mirror source)"
}
}
,
"#1"
:
{
"#desc"
:
{
"en"
:
"The mirror source name"
,
"cn"
:
"镜像源的名称"
}
,
"#exec:stdout"
:
"xrc termux && ___x_cmd_termux_pd_mirror_advise_ls"
}
,
"unuse|unset"
:
{
"#desc"
:
{
"en"
:
"Restoring the mirror configuration to the default GitHub mirror source"
,
"cn"
:
"复原镜像配置为 默认的 GitHub 镜像源"
}
}
,
"#tldr"
:
[
{
"cmd"
:
"x termux pd mirror set cb"
,
"cn"
:
"设置 proot-distro 镜像源为 Codeberg 镜像源"
,
"en"
:
"Set the proot-distro mirror source to Codeberg"
}
,
{
"cmd"
:
"x termux pd mirror ls"
,
"cn"
:
"列出当前可用的镜像源"
,
"en"
:
"List the available mirror source"
}
,
{
"cmd"
:
"x termux pd mirror unset"
,
"en"
:
"Restoring the mirror configuration"
,
"cn"
:
"复原镜像配置"
}
]
}
,
"run"
:
{
"#desc"
:
{
"en"
:
"Run a command in the specified distribution. Similar to `x termux pg login`, but will automatically download and install the distribution.\nMore docker run-like features will be added later.\nSimilar to login, creating a proot container takes some time, and if the Android device has power optimization for the Termux App, it may cause fluctuations in the creation time (my device varies from 2s to 10s, but it stabilizes at 2s when power optimization is turned off).\n"
,
"cn"
:
"在指定的发行版中运行命令。类似于 `x termux pg login`，但会自动下载并安装发行版.\n后面会加入更多类似 docker run 的功能.\n与 login 类似，创建 proot 容器需要一些时间，如果 Android 设备对 Termux App 有电源优化，可能会导致创建时间波动（我的设备从 2 秒到 10 秒不等，但关闭电源优化后稳定在 2 秒）。\n"
}
,
"#tldr"
:
[
{
"cmd"
:
"x termux pd run debian ls /bin"
,
"cn"
:
"在 Debian 发行版中运行 ls /bin"
,
"en"
:
"Run ls /bin in the Debian distribution"
}
,
{
"cmd"
:
"x termux pd run alpine sh"
,
"cn"
:
"在 Alpine 发行版中运行 sh"
,
"en"
:
"Run sh in the Alpine distribution"
}
]
}
,
"prep"
:
{
"#desc"
:
{
"en"
:
"Prepare the proot-distro runtime environment, generally does not need to be called manually.\nUsing pkg to install proot and proot-distro, the run subcommand will automatically call it as needed.\n"
,
"cn"
:
"准备 proot-distro 运行环境， 一般不需要手动调用.\n实现是通过 pkg 来安装 proot 和 proot-distro, run 子命令内部会自动按需调用.\n"
}
}
,
"help"
:
{
"#desc"
:
{
"en"
:
"Show this help information."
,
"cn"
:
"显示帮助信息"
}
}
,
"backup"
:
{
"#desc"
:
{
"en"
:
"Backup a specified distribution."
,
"cn"
:
"备份指定的发行版"
}
}
,
"list|ls"
:
{
"#desc"
:
{
"en"
:
"List supported distributions and their installation status."
,
"cn"
:
"列出支持的发行版及其安装状态"
}
}
,
"login|l"
:
{
"#desc"
:
{
"en"
:
"Start login shell for the specified distribution."
,
"cn"
:
"启动指定发行版的登录 shell"
}
}
,
"remove|rm"
:
{
"#desc"
:
{
"en"
:
"Delete a specified distribution. WARNING: this command destroys data!"
,
"cn"
:
"删除指定的发行版。警告：此命令会销毁数据！"
}
}
,
"rename"
:
{
"#desc"
:
{
"en"
:
"Rename installed distribution."
,
"cn"
:
"重命名已安装的发行版。"
}
}
,
"reset"
:
{
"#desc"
:
{
"en"
:
"Reinstall from scratch a specified distribution. WARNING: this command destroys data!"
,
"cn"
:
"从头重新安装指定发行版。警告：此命令会销毁数据！"
}
}
,
"restore"
:
{
"#desc"
:
{
"en"
:
"Restore a specified distribution. WARNING: this command destroys data!"
,
"cn"
:
"恢复指定的发行版。警告：此命令会销毁数据！"
}
}
,
"clear-cache|clear"
:
{
"#desc"
:
{
"en"
:
"Clear cache of downloaded files."
,
"cn"
:
"清除已下载文件的缓存"
}
}
,
"copy|cp"
:
{
"#desc"
:
{
"en"
:
"Copy files from/to distribution."
,
"cn"
:
"从发行版复制文件或向其复制文件"
}
}
}

